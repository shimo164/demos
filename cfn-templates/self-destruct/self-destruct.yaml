AWSTemplateFormatVersion: "2010-09-09"
Description: "Start Sfn with EventBridge. Do some tasks Lambda1. Delete stack with Lambda2. "
Resources:
  MainHandlerServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  MainHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import time


          def handler(event, context):

              print("Do something here!")
              time.sleep(5)

              return {'statusCode': 200}
      Role:
        Fn::GetAtt:
          - MainHandlerServiceRole
          - Arn
      Handler: index.handler
      Runtime: python3.9
      Timeout: 30
    DependsOn:
      - MainHandlerServiceRole
  DestructHandlerServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  DestructHandlerServiceRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: cloudformation:DeleteStack
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:cloudformation:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :stack/Cdk*/*
        Version: "2012-10-17"
      PolicyName: DestructHandlerServiceRoleDefaultPolicy
      Roles:
        - Ref: DestructHandlerServiceRole
  DestructHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import os

          import boto3


          def handler(event, context):
              client = boto3.client('cloudformation')
              stack_name = os.environ["StackName"]

              response = client.delete_stack(
                  StackName=stack_name,
              )
              print(response)

              return {'statusCode': response['ResponseMetadata']['HTTPStatusCode']}
      Role:
        Fn::GetAtt:
          - DestructHandlerServiceRole
          - Arn
      Environment:
        Variables:
          StackName: CdkSelfDestructStack
      Handler: destruct.handler
      Runtime: python3.9
      Timeout: 30
    DependsOn:
      - DestructHandlerServiceRoleDefaultPolicy
      - DestructHandlerServiceRole
  CdkSelfDestructStackStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
  CdkSelfDestructStackStateMachineRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DestructHandler
                  - Arn
              - Fn::GetAtt:
                  - MainHandler
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DestructHandler
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MainHandler
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: CdkSelfDestructStackStateMachineRoleDefaultPolicy
      Roles:
        - Ref: CdkSelfDestructStackStateMachineRole
  CdkSelfDestructStackStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - CdkSelfDestructStackStateMachineRole
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"First Job","States":{"First Job":{"Next":"Second Job","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - MainHandler
                - Arn
            - '","Payload.$":"$"}},"Second Job":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - DestructHandler
                - Arn
            - '","Payload.$":"$"}}},"TimeoutSeconds":300}'
    DependsOn:
      - CdkSelfDestructStackStateMachineRoleDefaultPolicy
      - CdkSelfDestructStackStateMachineRole
  CdkSelfDestructStackStateMachineEventsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
  CdkSelfDestructStackStateMachineEventsRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              Ref: CdkSelfDestructStackStateMachine
        Version: "2012-10-17"
      PolicyName: CdkSelfDestructStackStateMachineEventsRoleDefaultPolicy
      Roles:
        - Ref: CdkSelfDestructStackStateMachineEventsRole
  ScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0 0 * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Ref: CdkSelfDestructStackStateMachine
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - CdkSelfDestructStackStateMachineEventsRole
              - Arn
